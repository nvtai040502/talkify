datasource db {
  provider = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Workspace {
  id String @id @default(uuid())  @unique
  createdAt DateTime @default(now())
  updatedAt  DateTime   @updatedAt

  name String @db.Text
  isHome Boolean @default(false)
  description String @db.Text
  defaultTemperature Float
  defaultPrompt String @db.Text
  defaultModel String
  defaultMaxTokens Int
  defaultTopK Int
  defaultTopP Float
  defaultRepetitionPenalty Float

  chats Chat[]
}

model Chat {
  id String @id @default(uuid())  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String @db.Text
  messages Message[]
  workspaceId String
  workspace Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

}

enum MessageRole {
  system 
  user 
  assistant
  function
  data
  tool
}
model Message {
  id String @id @default(uuid()) @unique
  createdAt DateTime @default(now())
  updatedAt  DateTime   @updatedAt
  
  content String
  sequence_number Int
  role MessageRole

  chatId String
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

}

model Presets {
  id String @id @default(uuid()) @unique
  createdAt DateTime @default(now())
  updatedAt  DateTime   @updatedAt

  name String @db.Text
  description String @db.Text
  prompt String @db.Text
  temperature Float
}
